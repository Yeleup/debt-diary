<?php

namespace App\Controller\Admin;

use App\Entity\CustomerOrder;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
use EasyCorp\Bundle\EasyAdminBundle\Field\DateField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class CustomerOrderCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return CustomerOrder::class;
    }

    public function configureActions(Actions $actions): Actions
    {
        return $actions
            ->remove(Crud::PAGE_INDEX, Action::EDIT)
            ->setPermission(Action::DELETE, "ROLE_ADMIN")
            ->setPermission(Action::NEW, "ROLE_ADMIN");
    }

    public function configureCrud(Crud $crud): Crud
    {
        $crud->setDefaultSort(['updated' => "ASC"]);
        return $crud; // TODO: Change the autogenerated stub
    }

    public function configureFields(string $pageName): iterable
    {
        $confirmed = BooleanField::new('confirmed', 'customer_order.confirmed')->onlyOnIndex();

        yield TextField::new('amount','customer_order.amount');
        yield AssociationField::new('payment','customer_order.payment');
        yield AssociationField::new('type','customer_order.type');
        yield AssociationField::new('customer','customer_order.customer');
        yield AssociationField::new('user','customer_order.user');

        if ($this->isGranted("ROLE_ADMIN")) {
            yield $confirmed;
        } elseif ($this->isGranted("ROLE_CONTROL")) {

            $confirmed->formatValue(function ($value, $entity) {

                if ($entity->getPayment() && $this->getUser()->getPayments()) {
                    foreach ($this->getUser()->getPayments() as $payment) {
                        if ($entity->getPayment()) {
                            if ($payment->getId() == $entity->getPayment()->getId()) {
                                return $value;
                            }
                        }
                    }
                }

                return '';
            });

            yield $confirmed;
        }

        yield DateField::new('updated','customer_order.updated')->setFormat('y-MM-dd HH:mm:ss');
    }

}
